{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/layout/Navbar.js","webpack:///./src/components/layout/footer.js","webpack:///./src/hooks/useDarkmode.js","webpack:///./src/components/layout/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Navbar","toggleDarkMode","darkMode","nightModeIcon","react_default","index_es","icon","faSun","faMoon","nightModeIconStyle","navbarStyle","day","night","className","navsection","logo","gatsby_browser_entry","to","navbar","navitem","navlink","activeClassName","linkActive","nightModeBtn","onClick","Footer","style","justifySelf","opacity","fontSize","margin","href","target","rel","localStorage","window","useDarkMode","_useState","useState","getItem","setDarkMode","useEffect","isItdark","setItem","JSON","stringify","document","body","classList","remove","add","Layout","children","containerType","_useDarkMode","layoutStyles","box","layout_Navbar","fluid","container","footer","node"],"mappings":"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","file":"component---src-pages-404-js-552615b4a8fd7837ed6b.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react';\nimport navbarStyle from './Navbar.module.css';\nimport { Link } from 'gatsby';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSun, faMoon } from '@fortawesome/free-solid-svg-icons';\n\nconst Navbar = ({ toggleDarkMode, darkMode }) => {\n  const nightModeIcon = darkMode ? (\n    <FontAwesomeIcon icon={faSun} />\n  ) : (\n    <FontAwesomeIcon icon={faMoon} />\n  );\n  const nightModeIconStyle = darkMode ? navbarStyle.day : navbarStyle.night;\n\n  return (\n    <div className={navbarStyle.navsection}>\n      <div className={navbarStyle.logo}>\n        <Link to=\"/\">GK</Link>\n      </div>\n      <nav>\n        <ul className={navbarStyle.navbar}>\n          <li className={navbarStyle.navitem}>\n            <Link\n              className={navbarStyle.navlink}\n              to=\"/about\"\n              activeClassName={navbarStyle.linkActive}\n            >\n              About\n            </Link>\n          </li>\n          <li className={navbarStyle.navitem}>\n            <Link\n              className={navbarStyle.navlink}\n              to=\"/projects\"\n              activeClassName={navbarStyle.linkActive}\n            >\n              Projects\n            </Link>\n          </li>\n          <li className={navbarStyle.navitem}>\n            <Link\n              className={navbarStyle.navlink}\n              to=\"/contact\"\n              activeClassName={navbarStyle.linkActive}\n            >\n              Contact\n            </Link>\n          </li>\n          <li className={navbarStyle.navitem}>\n            <button\n              className={`${navbarStyle.nightModeBtn} ${nightModeIconStyle}`}\n              to=\"/contact\"\n              onClick={toggleDarkMode}\n            >\n              {nightModeIcon}\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer\n      style={{\n        justifySelf: 'end',\n        opacity: '0.7',\n        fontSize: '0.7rem',\n        margin: '10px auto',\n      }}\n    >\n      © 2019 Coded By{' '}\n      <a\n        href=\"https://twitter.com/_bgopikrishna\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Gopi Krishna\n      </a>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { useState, useEffect } from 'react';\n\nconst localStorage = typeof window !== 'undefined' && window.localStorage;\n\nexport const useDarkMode = () => {\n  const [darkMode, setDarkMode] = useState(\n    localStorage.getItem('darkMode') === 'true' ? true : false\n  );\n\n  useEffect(() => {\n    toggleDarkMode(darkMode);\n  }, [darkMode]);\n\n  return [darkMode, setDarkMode];\n};\n\nfunction toggleDarkMode(isItdark) {\n  localStorage.setItem('darkMode', JSON.stringify(isItdark));\n  if (isItdark) {\n    document.body.classList.remove('light');\n    document.body.classList.add('dark');\n  } else {\n    document.body.classList.remove('dark');\n    document.body.classList.add('light');\n  }\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Navbar from './Navbar';\nimport {} from 'gatsby-plugin-react-helmet';\nimport layoutStyles from './layout.module.css';\nimport Footer from './footer';\nimport { useDarkMode } from '../../hooks/useDarkmode';\n\nconst Layout = ({ children, containerType }) => {\n  const [darkMode, setDarkMode] = useDarkMode();\n\n  return (\n    <div className={layoutStyles.box}>\n      <Navbar\n        toggleDarkMode={() => setDarkMode(!darkMode)}\n        darkMode={darkMode}\n      />\n      <div\n        className={\n          containerType === 'fluid'\n            ? layoutStyles.fluid\n            : layoutStyles.container\n        }\n      >\n        <main>{children}</main>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nLayout.defaultProps = {\n  containerType: 'fluid',\n};\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}